{{ $ldapdn := .Env.ADUSER }}
{{ $ldappw := .Env.ADPASS }}
{{ $ldapdomain := .Env.ADDOMAIN }}
{{ $ldapbase := .Env.ADBASE }}
{{ range $host, $parts := groupBy $ "ID" }}
{{ range $container := $parts }}
{{ if $container.State.Running }}
{{else}}
#!/bin/bash
#
# Shutdown script for Proconsul docker container {{ $container.ID }}
#
ts=`date +'%Y-%m-%d %H:%M:%S'`
# Get the retval from the container 
#retval=`docker start {{$container.ID}} > /dev/null; docker exec {{$container.ID}} cat /tmp/retval; docker stop {{$container.ID}} > /dev/null`
mkdir -p /tmp/{{$container.ID}}
docker cp {{$container.ID}}:/tmp/retval /tmp/{{$container.ID}}
retval=`cat /tmp/{{$container.ID}}/retval`
# Adjust in case of reconnect disconnection
for i in `docker ps | grep -v NAMES | awk '{print $NF}'`; do if docker top $i | grep xfreerdp | grep {{$container.Env.WINUSER}}; then retval=3; fi; done
#
# If the retval from the RDP client does not indicate a "disconnect", remove the user from the AD
# and remove the session from the Proconsul database.
#
if [ $retval != 1 -a $retval != 11 -a $retval != 3 ]
then
# cleanup the database
# First, write the audit log
echo "insert into audit_log values ('$ts',null,'logout','{{$container.Env.WINUSER}}','{{$container.Env.RHOSTNAME}}',null,null);" | mysql -u {{$container.Env.MYSQLUSER}} --password={{$container.Env.MYSQLPW}} proconsul
#
# Then, remove the relevant session and port from the DB
#
echo "delete from sessions where samaccountname = '{{$container.Env.WINUSER}}';" | mysql -u {{$container.Env.MYSQLUSER}} --password={{$container.Env.MYSQLPW}} proconsul
echo "delete from ports where portnum = '{{$container.Env.DISPLAY}}';" | mysql -u {{$container.Env.MYSQLUSER}} --password={{$container.Env.MYSQLPW}} proconsul
#
# Then remove the dynamic AD user
#
export LDAPTLS_REQCERT=never
ldapdelete -x -H ldaps://{{$ldapdomain}}:636 -D {{$ldapdn}} -w '{{$ldappw}}' CN={{$container.Env.WINUSER}},{{$ldapbase}}
## Now we update the ending timestamp for the user in the database (if it was a DA user -- otherwise,
## this amounts to a no-op)
echo "update active_domain_admins set disabletime = `date +%s` where samaccountname = '{{$container.Env.WINUSER}}';" | mysql -u {{$container.Env.MYSQLUSER}} --password={{$container.Env.MYSQLPW}} proconsul

else

# Disconnection -- modify database accordingly and leave the user in the AD
echo "insert into audit_log values ('$ts',null,'disconnect','{{$container.Env.WINUSER}}','{{$container.Env.RHOSTNAME}}',null,null);" | mysql -u {{$container.Env.MYSQLUSER}} --password={{$container.Env.MYSQLPW}} proconsul
#
# Change db values
#
echo "update sessions set running = '0',connected = '0',status='disconnected' where samaccountname = '{{$container.Env.WINUSER}}';" | mysql -u {{$container.Env.MYSQLUSER}} --password={{$container.Env.MYSQLPW}} proconsul
echo "delete from ports where portnum = '{{$container.Env.DISPLAY}}';" | mysql -u {{$container.Env.MYSQLUSER}} --password={{$container.Env.MYSQLPW}} proconsul
#
# Modify password
#
userdn={{$container.Env.WINUSER}},{{$ldapbase}}
echo "dn: $userdn" > /tmp/{{$container.ID}}.ldif
echo "changetype: modify" >> /tmp/{{$container.ID}}.ldif
echo "replace: unicodePwd" >> /tmp/{{$container.ID}}.ldif
echo "unicodePwd: blahblah" >> /tmp/{{$container.ID}}.ldif
ldapmdodify  -x -H ldaps://{{$ldapdomain}}:636 -D {{$ldapdn}} -w '{{$ldappw}}' -f /tmp/{{$container.ID}}.ldif
fi

#
# Delete the docker container outright
#
docker rm {{$container.ID}}

{{end}}
{{end}}
{{end}}
